# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - qr2pay-app

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Prepare build artifacts
        run: |
          # Create a clean deployment directory with the right structure
          mkdir -p deployment
          
          # Copy all standalone files to deployment root
          cp -r .next/standalone/* deployment/
          
          # Ensure .next directory exists with all required files
          mkdir -p deployment/.next
          cp -r .next/static deployment/.next/ 2>/dev/null || echo "No static files"
          cp -r .next/server deployment/.next/ 2>/dev/null || echo "No server files"
          cp .next/BUILD_ID deployment/.next/ 2>/dev/null || echo "No BUILD_ID"
          cp .next/routes-manifest.json deployment/.next/ 2>/dev/null || echo "No routes-manifest"
          cp .next/prerender-manifest.json deployment/.next/ 2>/dev/null || echo "No prerender-manifest"
          
          # Copy debug files
          cp debug-start.js deployment/
          cp .deployment-settings deployment/ || echo "No deployment-settings"
          
          # Create optimized package.json for Azure
          cat > deployment/package.json << 'EOF'
          {
            "name": "qr2pay-react",
            "version": "0.1.0",
            "scripts": {
              "start": "node debug-start.js"
            },
            "engines": {
              "node": "22.x",
              "npm": "10.x"
            }
          }
          EOF
          
          # Verification
          echo "=== Deployment structure verification ==="
          test -f deployment/server.js && echo "✅ server.js" || echo "❌ server.js"
          test -d deployment/.next && echo "✅ .next dir" || echo "❌ .next dir"
          test -f deployment/debug-start.js && echo "✅ debug-start.js" || echo "❌ debug-start.js"
          test -f deployment/.deployment-settings && echo "✅ deployment-settings" || echo "❌ deployment-settings"
          echo "Deployment files:"
          ls -la deployment/ | head -10
          mkdir -p deployment/.next
          cp -r .next/static deployment/.next/ || echo "No static files to copy"
          
          # Copy public files to deployment
          cp -r public deployment/ || echo "No public files to copy"
          
          # Create the correct package.json in deployment
          cat > deployment/package.json << 'EOF'
          {
            "name": "qr2pay-react",
            "version": "0.1.0",
            "scripts": {
              "start": "node server.js"
            },
            "engines": {
              "node": "22.x",
              "npm": "10.x"
            }
          }
          EOF
          
          # Copy other necessary files
          cp web.config.template deployment/web.config || echo "No web.config.template"
          cp .deployment deployment/ || echo "No .deployment file"
          
          # Verify the structure
          echo "=== Deployment directory structure ==="
          ls -la deployment/
          echo "=== .next directory check ==="
          ls -la deployment/.next/ || echo "No .next in deployment"
          echo "=== server.js check ==="
          ls -la deployment/server.js || echo "No server.js in deployment"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          
      - name: Verify deployment structure
        run: |
          echo "=== Downloaded deployment structure ==="
          ls -la
          echo "=== Critical files check ==="
          test -f server.js && echo "✅ server.js: YES" || echo "❌ server.js: NO"
          test -d .next && echo "✅ .next directory: YES" || echo "❌ .next directory: NO"
          test -f .next/BUILD_ID && echo "✅ .next/BUILD_ID: YES" || echo "❌ .next/BUILD_ID: NO"
          test -d .next/server && echo "✅ .next/server: YES" || echo "❌ .next/server: NO"
          echo "=== package.json content ==="
          cat package.json || echo "No package.json"
          echo "=== .next directory contents ==="
          ls -la .next/ || echo "Cannot list .next"
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_248E9AABBE944CE3944A6B8216386480 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4AC765D7663D42CF93CB3746D90CE3ED }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_3A3134DBAE9D42719FF32075EB50F1E7 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'qr2pay-app'
          slot-name: 'Production'
          package: .
          startup-command: 'node server.js'
          